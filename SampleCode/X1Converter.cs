
using System;
using System.Collections.Generic;
using System.Text;

public static class X1Converter
{
    // X1 -> Unicode 変換マップ
    private static readonly Dictionary<byte, char> X1ToWinMap = new Dictionary<byte, char>
{
    { 0x20, ' ' },
    { 0x21, '!' },
    { 0x22, '"' },
    { 0x23, '#' },
    { 0x24, '$' },
    { 0x25, '%' },
    { 0x26, '&' },
    { 0x27, '\'' },
    { 0x28, '(' },
    { 0x29, ')' },
    { 0x2A, '*' },
    { 0x2B, '+' },
    { 0x2C, ',' },
    { 0x2D, '-' },
    { 0x2E, '.' },
    { 0x2F, '/' },
    { 0x30, '0' },
    { 0x31, '1' },
    { 0x32, '2' },
    { 0x33, '3' },
    { 0x34, '4' },
    { 0x35, '5' },
    { 0x36, '6' },
    { 0x37, '7' },
    { 0x38, '8' },
    { 0x39, '9' },
    { 0x3A, ':' },
    { 0x3B, ';' },
    { 0x3C, '<' },
    { 0x3D, '=' },
    { 0x3E, '>' },
    { 0x3F, '?' },
    { 0x40, '@' },
    { 0x41, 'A' },
    { 0x42, 'B' },
    { 0x43, 'C' },
    { 0x44, 'D' },
    { 0x45, 'E' },
    { 0x46, 'F' },
    { 0x47, 'G' },
    { 0x48, 'H' },
    { 0x49, 'I' },
    { 0x4A, 'J' },
    { 0x4B, 'K' },
    { 0x4C, 'L' },
    { 0x4D, 'M' },
    { 0x4E, 'N' },
    { 0x4F, 'O' },
    { 0x50, 'P' },
    { 0x51, 'Q' },
    { 0x52, 'R' },
    { 0x53, 'S' },
    { 0x54, 'T' },
    { 0x55, 'U' },
    { 0x56, 'V' },
    { 0x57, 'W' },
    { 0x58, 'X' },
    { 0x59, 'Y' },
    { 0x5A, 'Z' },
    { 0x5B, '[' },
    { 0x5C, '\\' },
    { 0x5D, ']' },
    { 0x5E, '^' },
    { 0x5F, '_' },
    { 0x60, '`' },
    { 0x61, 'a' },
    { 0x62, 'b' },
    { 0x63, 'c' },
    { 0x64, 'd' },
    { 0x65, 'e' },
    { 0x66, 'f' },
    { 0x67, 'g' },
    { 0x68, 'h' },
    { 0x69, 'i' },
    { 0x6A, 'j' },
    { 0x6B, 'k' },
    { 0x6C, 'l' },
    { 0x6D, 'm' },
    { 0x6E, 'n' },
    { 0x6F, 'o' },
    { 0x70, 'p' },
    { 0x71, 'q' },
    { 0x72, 'r' },
    { 0x73, 's' },
    { 0x74, 't' },
    { 0x75, 'u' },
    { 0x76, 'v' },
    { 0x77, 'w' },
    { 0x78, 'x' },
    { 0x79, 'y' },
    { 0x7A, 'z' },
    { 0x7B, '{' },
    { 0x7C, '|' },
    { 0x7D, '}' },
    { 0x7E, '~' },
    { 0x7F, 'π' },
    { 0xA1, '｡' },
    { 0xA2, '｢' },
    { 0xA3, '｣' },
    { 0xA4, '､' },
    { 0xA5, '･' },
    { 0xA6, 'ｦ' },
    { 0xA7, 'ｧ' },
    { 0xA8, 'ｨ' },
    { 0xA9, 'ｩ' },
    { 0xAA, 'ｪ' },
    { 0xAB, 'ｫ' },
    { 0xAC, 'ｬ' },
    { 0xAD, 'ｭ' },
    { 0xAE, 'ｮ' },
    { 0xAF, 'ｯ' },
    { 0xB0, 'ｰ' },
    { 0xB1, 'ｱ' },
    { 0xB2, 'ｲ' },
    { 0xB3, 'ｳ' },
    { 0xB4, 'ｴ' },
    { 0xB5, 'ｵ' },
    { 0xB6, 'ｶ' },
    { 0xB7, 'ｷ' },
    { 0xB8, 'ｸ' },
    { 0xB9, 'ｹ' },
    { 0xBA, 'ｺ' },
    { 0xBB, 'ｻ' },
    { 0xBC, 'ｼ' },
    { 0xBD, 'ｽ' },
    { 0xBE, 'ｾ' },
    { 0xBF, 'ｿ' },
    { 0xC0, 'ﾀ' },
    { 0xC1, 'ﾁ' },
    { 0xC2, 'ﾂ' },
    { 0xC3, 'ﾃ' },
    { 0xC4, 'ﾄ' },
    { 0xC5, 'ﾅ' },
    { 0xC6, 'ﾆ' },
    { 0xC7, 'ﾇ' },
    { 0xC8, 'ﾈ' },
    { 0xC9, 'ﾉ' },
    { 0xCA, 'ﾊ' },
    { 0xCB, 'ﾋ' },
    { 0xCC, 'ﾌ' },
    { 0xCD, 'ﾍ' },
    { 0xCE, 'ﾎ' },
    { 0xCF, 'ﾏ' },
    { 0xD0, 'ﾐ' },
    { 0xD1, 'ﾑ' },
    { 0xD2, 'ﾒ' },
    { 0xD3, 'ﾓ' },
    { 0xD4, 'ﾔ' },
    { 0xD5, 'ﾕ' },
    { 0xD6, 'ﾖ' },
    { 0xD7, 'ﾗ' },
    { 0xD8, 'ﾘ' },
    { 0xD9, 'ﾙ' },
    { 0xDA, 'ﾚ' },
    { 0xDB, 'ﾛ' },
    { 0xDC, 'ﾜ' },
    { 0xDD, 'ﾝ' },
    { 0xDE, 'ﾞ' },
    { 0xDF, 'ﾟ' },
    { 0xE0, '┌' },
    { 0xE1, '┬' },
    { 0xE2, '┐' },
    { 0xE3, '├' },
    { 0xE4, '┼' },
    { 0xE5, '┤' },
    { 0xE6, '└' },
    { 0xE7, '┴' },
    { 0xE8, '┘' },
    { 0xE9, '─' },
    { 0xEA, '│' },
    { 0xEB, '█' },
    { 0xEC, '▓' },
    { 0xED, '▒' },
    { 0xEE, '░' },
    { 0xEF, '→' },
    { 0xF0, '×' },
    { 0xF1, '÷' },
    { 0xF2, '∞' },
    { 0xF3, '√' },
    { 0xF4, '∑' },
    { 0xF5, 'Ω' },
    { 0xF6, 'Σ' },
    { 0xF7, '♂' },
    { 0xF8, '♀' },
    { 0xF9, '♪' },
    { 0xFA, '©' },
    { 0xFB, '年' },
    { 0xFC, '月' },
    { 0xFD, '日' },
    { 0xFE, '時' },
    { 0xFF, '分' }
};

    // Unicode -> X1 変換マップ
    private static readonly Dictionary<char, byte> WinToX1Map = new Dictionary<char, byte>
{
    { ' ', 0x20 },
    { '!', 0x21 },
    { '"', 0x22 },
    { '#', 0x23 },
    { '$', 0x24 },
    { '%', 0x25 },
    { '&', 0x26 },
    { '\'', 0x27 },
    { '(', 0x28 },
    { ')', 0x29 },
    { '*', 0x2A },
    { '+', 0x2B },
    { ',', 0x2C },
    { '-', 0x2D },
    { '.', 0x2E },
    { '/', 0x2F },
    { '0', 0x30 },
    { '1', 0x31 },
    { '2', 0x32 },
    { '3', 0x33 },
    { '4', 0x34 },
    { '5', 0x35 },
    { '6', 0x36 },
    { '7', 0x37 },
    { '8', 0x38 },
    { '9', 0x39 },
    { ':', 0x3A },
    { ';', 0x3B },
    { '<', 0x3C },
    { '=', 0x3D },
    { '>', 0x3E },
    { '?', 0x3F },
    { '@', 0x40 },
    { 'A', 0x41 },
    { 'B', 0x42 },
    { 'C', 0x43 },
    { 'D', 0x44 },
    { 'E', 0x45 },
    { 'F', 0x46 },
    { 'G', 0x47 },
    { 'H', 0x48 },
    { 'I', 0x49 },
    { 'J', 0x4A },
    { 'K', 0x4B },
    { 'L', 0x4C },
    { 'M', 0x4D },
    { 'N', 0x4E },
    { 'O', 0x4F },
    { 'P', 0x50 },
    { 'Q', 0x51 },
    { 'R', 0x52 },
    { 'S', 0x53 },
    { 'T', 0x54 },
    { 'U', 0x55 },
    { 'V', 0x56 },
    { 'W', 0x57 },
    { 'X', 0x58 },
    { 'Y', 0x59 },
    { 'Z', 0x5A },
    { '[', 0x5B },
    { '\\', 0x5C },
    { ']', 0x5D },
    { '^', 0x5E },
    { '_', 0x5F },
    { '`', 0x60 },
    { 'a', 0x61 },
    { 'b', 0x62 },
    { 'c', 0x63 },
    { 'd', 0x64 },
    { 'e', 0x65 },
    { 'f', 0x66 },
    { 'g', 0x67 },
    { 'h', 0x68 },
    { 'i', 0x69 },
    { 'j', 0x6A },
    { 'k', 0x6B },
    { 'l', 0x6C },
    { 'm', 0x6D },
    { 'n', 0x6E },
    { 'o', 0x6F },
    { 'p', 0x70 },
    { 'q', 0x71 },
    { 'r', 0x72 },
    { 's', 0x73 },
    { 't', 0x74 },
    { 'u', 0x75 },
    { 'v', 0x76 },
    { 'w', 0x77 },
    { 'x', 0x78 },
    { 'y', 0x79 },
    { 'z', 0x7A },
    { '{', 0x7B },
    { '|', 0x7C },
    { '}', 0x7D },
    { '~', 0x7E },
    { 'π', 0x7F },
    { '｡', 0xA1 },
    { '｢', 0xA2 },
    { '｣', 0xA3 },
    { '､', 0xA4 },
    { '･', 0xA5 },
    { 'ｦ', 0xA6 },
    { 'ｧ', 0xA7 },
    { 'ｨ', 0xA8 },
    { 'ｩ', 0xA9 },
    { 'ｪ', 0xAA },
    { 'ｫ', 0xAB },
    { 'ｬ', 0xAC },
    { 'ｭ', 0xAD },
    { 'ｮ', 0xAE },
    { 'ｯ', 0xAF },
    { 'ｰ', 0xB0 },
    { 'ｱ', 0xB1 },
    { 'ｲ', 0xB2 },
    { 'ｳ', 0xB3 },
    { 'ｴ', 0xB4 },
    { 'ｵ', 0xB5 },
    { 'ｶ', 0xB6 },
    { 'ｷ', 0xB7 },
    { 'ｸ', 0xB8 },
    { 'ｹ', 0xB9 },
    { 'ｺ', 0xBA },
    { 'ｻ', 0xBB },
    { 'ｼ', 0xBC },
    { 'ｽ', 0xBD },
    { 'ｾ', 0xBE },
    { 'ｿ', 0xBF },
    { 'ﾀ', 0xC0 },
    { 'ﾁ', 0xC1 },
    { 'ﾂ', 0xC2 },
    { 'ﾃ', 0xC3 },
    { 'ﾄ', 0xC4 },
    { 'ﾅ', 0xC5 },
    { 'ﾆ', 0xC6 },
    { 'ﾇ', 0xC7 },
    { 'ﾈ', 0xC8 },
    { 'ﾉ', 0xC9 },
    { 'ﾊ', 0xCA },
    { 'ﾋ', 0xCB },
    { 'ﾌ', 0xCC },
    { 'ﾍ', 0xCD },
    { 'ﾎ', 0xCE },
    { 'ﾏ', 0xCF },
    { 'ﾐ', 0xD0 },
    { 'ﾑ', 0xD1 },
    { 'ﾒ', 0xD2 },
    { 'ﾓ', 0xD3 },
    { 'ﾔ', 0xD4 },
    { 'ﾕ', 0xD5 },
    { 'ﾖ', 0xD6 },
    { 'ﾗ', 0xD7 },
    { 'ﾘ', 0xD8 },
    { 'ﾙ', 0xD9 },
    { 'ﾚ', 0xDA },
    { 'ﾛ', 0xDB },
    { 'ﾜ', 0xDC },
    { 'ﾝ', 0xDD },
    { 'ﾞ', 0xDE },
    { 'ﾟ', 0xDF },
    { '┌', 0xE0 },
    { '┬', 0xE1 },
    { '┐', 0xE2 },
    { '├', 0xE3 },
    { '┼', 0xE4 },
    { '┤', 0xE5 },
    { '└', 0xE6 },
    { '┴', 0xE7 },
    { '┘', 0xE8 },
    { '─', 0xE9 },
    { '│', 0xEA },
    { '█', 0xEB },
    { '▓', 0xEC },
    { '▒', 0xED },
    { '░', 0xEE },
    { '→', 0xEF },
    { '×', 0xF0 },
    { '÷', 0xF1 },
    { '∞', 0xF2 },
    { '√', 0xF3 },
    { '∑', 0xF4 },
    { 'Ω', 0xF5 },
    { 'Σ', 0xF6 },
    { '♂', 0xF7 },
    { '♀', 0xF8 },
    { '♪', 0xF9 },
    { '©', 0xFA },
    { '年', 0xFB },
    { '月', 0xFC },
    { '日', 0xFD },
    { '時', 0xFE },
    { '分', 0xFF }
};

    public static string X1_to_Win(string x1Text)
    {
        var bytes = Encoding.GetEncoding("Shift_JIS").GetBytes(x1Text);
        var result = new StringBuilder();
        foreach (var b in bytes)
        {
            result.Append(X1ToWinMap.TryGetValue(b, out var ch) ? ch : '□'); // fallback
        }
        return result.ToString();
    }

    public static string Win_to_X1(string winText)
    {
        var result = new List<byte>();
        string normalized = winText.Normalize(NormalizationForm.FormKC);

        foreach (var ch in normalized)
        {
            if (WinToX1Map.TryGetValue(ch, out var b))
                result.Add(b);
            else
                result.Add(0x20); // fallback to space
        }

        return Encoding.GetEncoding("Shift_JIS").GetString(result.ToArray());
    }

    public static string X1_to_Win_CRLF(string input)
    {
        return input
            .Replace("\r\n", "\r")
            .Replace("\n", "\r")
            .Replace("\r", Environment.NewLine);
    }

    public static string Win_to_X1_CRLF(string input)
    {
        return input
            .Replace("\r\n", "\r")
            .Replace("\n", "\r");
    }
}
